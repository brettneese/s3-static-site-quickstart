name: 'Deploy'
on: ['deployment']

jobs:
  deployment:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set STAGE to production (we assume staging if not set)
        if: startsWith(github.event.deployment.environment, 'production')
        run: |
          echo "::set-env name=STAGE::production"
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: "10.x"
      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-build-${{ env.cache-name }}-
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-
      - name: Install and build
        run: npm install; npm run build --if-present 
      - name: Test
        run: npm test --if-present
        env:
          CI: true
      - name: Deploy to SHA
        run: npm run deploy:assets --if-present
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: 'Deploy to public/root'
        if: (success() && startsWith(github.event.deployment.environment, 'staging')) || (success() && startsWith(github.event.deployment.environment, 'production'))
        run: npm run deploy:assets-to-public
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          
      # Failure output
      - name: 'Deployment failure'
        if: failure()
        uses: 'deliverybot/deployment-status@master'
        with:
          state: 'failure'
          token: '${{ github.token }}'

      # Success outputs
      - name: 'Deployment success review'
        if: success() && startsWith(github.event.deployment.environment, 'pr')
        uses: 'deliverybot/deployment-status@master'
        with:
          state: 'success'
          token: '${{ github.token }}'
          environment-url: https://helloworld.staging.hbkapps.com/deploys/${{ github.sha }}/index.html
      - name: 'Deployment success staging'
        if: success() && startsWith(github.event.deployment.environment, 'staging')
        uses: 'deliverybot/deployment-status@master'
        with:
          state: 'success'
          token: '${{ github.token }}'
          environment-url: https://helloworld.staging.hbkapps.com/index.html
      - name: 'Deployment success production'
        if: success() && startsWith(github.event.deployment.environment, 'production')
        uses: 'deliverybot/deployment-status@master'
        with:
          state: 'success'
          token: '${{ github.token }}'
          environment-url: https://helloworld.production.hbkapps.com/
        